// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Microsoft.PowerBI.Api.Models
{
    public partial class Refresh
    {
        internal static Refresh DeserializeRefresh(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<RefreshType> refreshType = default;
            Optional<DateTimeOffset> startTime = default;
            Optional<DateTimeOffset> endTime = default;
            Optional<string> serviceExceptionJson = default;
            Optional<string> status = default;
            Optional<string> requestId = default;
            Optional<IReadOnlyList<RefreshAttempt>> refreshAttempts = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("refreshType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    refreshType = property.Value.GetString().ToRefreshType();
                    continue;
                }
                if (property.NameEquals("startTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    startTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("endTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    endTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("serviceExceptionJson"u8))
                {
                    serviceExceptionJson = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("status"u8))
                {
                    status = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("requestId"u8))
                {
                    requestId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("refreshAttempts"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<RefreshAttempt> array = new List<RefreshAttempt>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(RefreshAttempt.DeserializeRefreshAttempt(item));
                    }
                    refreshAttempts = array;
                    continue;
                }
            }
            return new Refresh(Optional.ToNullable(refreshType), Optional.ToNullable(startTime), Optional.ToNullable(endTime), serviceExceptionJson.Value, status.Value, requestId.Value, Optional.ToList(refreshAttempts));
        }
    }
}
