// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Microsoft.PowerBI.Api.Models
{
    public partial class WorkspaceInfoDataflowProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(DatasourceUsages))
            {
                writer.WritePropertyName("datasourceUsages"u8);
                writer.WriteStartArray();
                foreach (var item in DatasourceUsages)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(MisconfiguredDatasourceUsages))
            {
                writer.WritePropertyName("misconfiguredDatasourceUsages"u8);
                writer.WriteStartArray();
                foreach (var item in MisconfiguredDatasourceUsages)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(UpstreamDataflows))
            {
                writer.WritePropertyName("upstreamDataflows"u8);
                writer.WriteStartArray();
                foreach (var item in UpstreamDataflows)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(UpstreamDatamart))
            {
                writer.WritePropertyName("upstreamDatamart"u8);
                writer.WriteStartArray();
                foreach (var item in UpstreamDatamart)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static WorkspaceInfoDataflowProperties DeserializeWorkspaceInfoDataflowProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<IList<DatasourceUsage>> datasourceUsages = default;
            Optional<IList<DatasourceUsage>> misconfiguredDatasourceUsages = default;
            Optional<IList<DependentDataflow>> upstreamDataflows = default;
            Optional<IList<DependentDatamarts>> upstreamDatamart = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("datasourceUsages"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<DatasourceUsage> array = new List<DatasourceUsage>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DatasourceUsage.DeserializeDatasourceUsage(item));
                    }
                    datasourceUsages = array;
                    continue;
                }
                if (property.NameEquals("misconfiguredDatasourceUsages"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<DatasourceUsage> array = new List<DatasourceUsage>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DatasourceUsage.DeserializeDatasourceUsage(item));
                    }
                    misconfiguredDatasourceUsages = array;
                    continue;
                }
                if (property.NameEquals("upstreamDataflows"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<DependentDataflow> array = new List<DependentDataflow>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DependentDataflow.DeserializeDependentDataflow(item));
                    }
                    upstreamDataflows = array;
                    continue;
                }
                if (property.NameEquals("upstreamDatamart"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<DependentDatamarts> array = new List<DependentDatamarts>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DependentDatamarts.DeserializeDependentDatamarts(item));
                    }
                    upstreamDatamart = array;
                    continue;
                }
            }
            return new WorkspaceInfoDataflowProperties(Optional.ToList(datasourceUsages), Optional.ToList(misconfiguredDatasourceUsages), Optional.ToList(upstreamDataflows), Optional.ToList(upstreamDatamart));
        }
    }
}
