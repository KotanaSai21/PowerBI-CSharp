// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Microsoft.PowerBI.Api.Models
{
    public partial class DatasetQueryScaleOutSyncStatus
    {
        internal static DatasetQueryScaleOutSyncStatus DeserializeDatasetQueryScaleOutSyncStatus(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<long> commitVersion = default;
            Optional<DateTimeOffset> commitTimestamp = default;
            Optional<long> targetSyncVersion = default;
            Optional<DateTimeOffset> targetSyncTimestamp = default;
            Optional<QueryScaleOutSyncTriggerReason> triggerReason = default;
            Optional<DateTimeOffset> syncStartTime = default;
            Optional<DateTimeOffset> syncEndTime = default;
            Optional<long> minActiveReadVersion = default;
            Optional<DateTimeOffset> minActiveReadTimestamp = default;
            Optional<QueryScaleOutStatus> scaleOutStatus = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("commitVersion"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    commitVersion = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("commitTimestamp"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    commitTimestamp = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("targetSyncVersion"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    targetSyncVersion = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("targetSyncTimestamp"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    targetSyncTimestamp = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("triggerReason"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    triggerReason = new QueryScaleOutSyncTriggerReason(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("syncStartTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    syncStartTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("syncEndTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    syncEndTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("minActiveReadVersion"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    minActiveReadVersion = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("minActiveReadTimestamp"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    minActiveReadTimestamp = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("scaleOutStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    scaleOutStatus = new QueryScaleOutStatus(property.Value.GetString());
                    continue;
                }
            }
            return new DatasetQueryScaleOutSyncStatus(Optional.ToNullable(commitVersion), Optional.ToNullable(commitTimestamp), Optional.ToNullable(targetSyncVersion), Optional.ToNullable(targetSyncTimestamp), Optional.ToNullable(triggerReason), Optional.ToNullable(syncStartTime), Optional.ToNullable(syncEndTime), Optional.ToNullable(minActiveReadVersion), Optional.ToNullable(minActiveReadTimestamp), Optional.ToNullable(scaleOutStatus));
        }
    }
}
