// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Microsoft.PowerBI.Api.Models
{
    public partial class PipelineOperation
    {
        internal static PipelineOperation DeserializePipelineOperation(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Guid id = default;
            Optional<PipelineOperationType> type = default;
            PipelineOperationStatus status = default;
            DateTimeOffset lastUpdatedTime = default;
            Optional<DateTimeOffset> executionStartTime = default;
            Optional<DateTimeOffset> executionEndTime = default;
            Optional<int> sourceStageOrder = default;
            Optional<int> targetStageOrder = default;
            Optional<PipelineOperationUser> performedBy = default;
            Optional<PipelineOperationNote> note = default;
            Optional<DeploymentExecutionPlan> executionPlan = default;
            Optional<PreDeploymentDiffInformation> preDeploymentDiffInformation = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    type = new PipelineOperationType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("status"u8))
                {
                    status = property.Value.GetString().ToPipelineOperationStatus();
                    continue;
                }
                if (property.NameEquals("lastUpdatedTime"u8))
                {
                    lastUpdatedTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("executionStartTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    executionStartTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("executionEndTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    executionEndTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("sourceStageOrder"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sourceStageOrder = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("targetStageOrder"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    targetStageOrder = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("performedBy"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    performedBy = PipelineOperationUser.DeserializePipelineOperationUser(property.Value);
                    continue;
                }
                if (property.NameEquals("note"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    note = PipelineOperationNote.DeserializePipelineOperationNote(property.Value);
                    continue;
                }
                if (property.NameEquals("executionPlan"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    executionPlan = DeploymentExecutionPlan.DeserializeDeploymentExecutionPlan(property.Value);
                    continue;
                }
                if (property.NameEquals("preDeploymentDiffInformation"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    preDeploymentDiffInformation = PreDeploymentDiffInformation.DeserializePreDeploymentDiffInformation(property.Value);
                    continue;
                }
            }
            return new PipelineOperation(id, Optional.ToNullable(type), status, lastUpdatedTime, Optional.ToNullable(executionStartTime), Optional.ToNullable(executionEndTime), Optional.ToNullable(sourceStageOrder), Optional.ToNullable(targetStageOrder), performedBy.Value, note.Value, executionPlan.Value, preDeploymentDiffInformation.Value);
        }
    }
}
