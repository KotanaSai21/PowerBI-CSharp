// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Microsoft.PowerBI.Api.Models
{
    public partial class InformationProtectionChangeLabelResponse
    {
        internal static InformationProtectionChangeLabelResponse DeserializeInformationProtectionChangeLabelResponse(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<IReadOnlyList<ChangeLabelStatus>> dashboards = default;
            Optional<IReadOnlyList<ChangeLabelStatus>> reports = default;
            Optional<IReadOnlyList<ChangeLabelStatus>> dataflows = default;
            Optional<IReadOnlyList<ChangeLabelStatus>> datasets = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("dashboards"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ChangeLabelStatus> array = new List<ChangeLabelStatus>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ChangeLabelStatus.DeserializeChangeLabelStatus(item));
                    }
                    dashboards = array;
                    continue;
                }
                if (property.NameEquals("reports"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ChangeLabelStatus> array = new List<ChangeLabelStatus>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ChangeLabelStatus.DeserializeChangeLabelStatus(item));
                    }
                    reports = array;
                    continue;
                }
                if (property.NameEquals("dataflows"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ChangeLabelStatus> array = new List<ChangeLabelStatus>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ChangeLabelStatus.DeserializeChangeLabelStatus(item));
                    }
                    dataflows = array;
                    continue;
                }
                if (property.NameEquals("datasets"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ChangeLabelStatus> array = new List<ChangeLabelStatus>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ChangeLabelStatus.DeserializeChangeLabelStatus(item));
                    }
                    datasets = array;
                    continue;
                }
            }
            return new InformationProtectionChangeLabelResponse(Optional.ToList(dashboards), Optional.ToList(reports), Optional.ToList(dataflows), Optional.ToList(datasets));
        }
    }
}
