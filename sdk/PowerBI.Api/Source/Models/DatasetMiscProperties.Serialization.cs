// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Microsoft.PowerBI.Api.Models
{
    public partial class DatasetMiscProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(AddRowsAPIEnabled))
            {
                writer.WritePropertyName("addRowsAPIEnabled"u8);
                writer.WriteBooleanValue(AddRowsAPIEnabled.Value);
            }
            if (Optional.IsDefined(IsRefreshable))
            {
                writer.WritePropertyName("IsRefreshable"u8);
                writer.WriteBooleanValue(IsRefreshable.Value);
            }
            if (Optional.IsDefined(IsInPlaceSharingEnabled))
            {
                writer.WritePropertyName("IsInPlaceSharingEnabled"u8);
                writer.WriteBooleanValue(IsInPlaceSharingEnabled.Value);
            }
            writer.WriteEndObject();
        }

        internal static DatasetMiscProperties DeserializeDatasetMiscProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<bool> addRowsAPIEnabled = default;
            Optional<bool> isRefreshable = default;
            Optional<bool> isInPlaceSharingEnabled = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("addRowsAPIEnabled"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    addRowsAPIEnabled = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("IsRefreshable"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isRefreshable = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("IsInPlaceSharingEnabled"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isInPlaceSharingEnabled = property.Value.GetBoolean();
                    continue;
                }
            }
            return new DatasetMiscProperties(Optional.ToNullable(addRowsAPIEnabled), Optional.ToNullable(isRefreshable), Optional.ToNullable(isInPlaceSharingEnabled));
        }
    }
}
