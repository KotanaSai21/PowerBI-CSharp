// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Microsoft.PowerBI.Api.Models
{
    public partial class Datasource : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name"u8);
                writer.WriteStringValue(Name);
            }
            if (Optional.IsDefined(ConnectionString))
            {
                writer.WritePropertyName("connectionString"u8);
                writer.WriteStringValue(ConnectionString);
            }
            if (Optional.IsDefined(DatasourceType))
            {
                writer.WritePropertyName("datasourceType"u8);
                writer.WriteStringValue(DatasourceType);
            }
            if (Optional.IsDefined(ConnectionDetails))
            {
                writer.WritePropertyName("connectionDetails"u8);
                writer.WriteObjectValue(ConnectionDetails);
            }
            if (Optional.IsDefined(GatewayId))
            {
                writer.WritePropertyName("gatewayId"u8);
                writer.WriteStringValue(GatewayId.Value);
            }
            if (Optional.IsDefined(DatasourceId))
            {
                writer.WritePropertyName("datasourceId"u8);
                writer.WriteStringValue(DatasourceId.Value);
            }
            writer.WriteEndObject();
        }

        internal static Datasource DeserializeDatasource(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> name = default;
            Optional<string> connectionString = default;
            Optional<string> datasourceType = default;
            Optional<DatasourceConnectionDetails> connectionDetails = default;
            Optional<Guid> gatewayId = default;
            Optional<Guid> datasourceId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("connectionString"u8))
                {
                    connectionString = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("datasourceType"u8))
                {
                    datasourceType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("connectionDetails"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    connectionDetails = DatasourceConnectionDetails.DeserializeDatasourceConnectionDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("gatewayId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    gatewayId = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("datasourceId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    datasourceId = property.Value.GetGuid();
                    continue;
                }
            }
            return new Datasource(name.Value, connectionString.Value, datasourceType.Value, connectionDetails.Value, Optional.ToNullable(gatewayId), Optional.ToNullable(datasourceId));
        }
    }
}
