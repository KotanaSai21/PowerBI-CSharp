// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Microsoft.PowerBI.Api.Models
{
    public partial class WorkspaceInfoTile : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DatasetWorkspaceId))
            {
                writer.WritePropertyName("datasetWorkspaceId"u8);
                writer.WriteStringValue(DatasetWorkspaceId.Value);
            }
            writer.WritePropertyName("id"u8);
            writer.WriteStringValue(Id);
            if (Optional.IsDefined(Title))
            {
                writer.WritePropertyName("title"u8);
                writer.WriteStringValue(Title);
            }
            if (Optional.IsDefined(ReportId))
            {
                writer.WritePropertyName("reportId"u8);
                writer.WriteStringValue(ReportId.Value);
            }
            if (Optional.IsDefined(DatasetId))
            {
                writer.WritePropertyName("datasetId"u8);
                writer.WriteStringValue(DatasetId);
            }
            writer.WriteEndObject();
        }

        internal static WorkspaceInfoTile DeserializeWorkspaceInfoTile(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<Guid> datasetWorkspaceId = default;
            Guid id = default;
            Optional<string> title = default;
            Optional<Guid> reportId = default;
            Optional<string> datasetId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("datasetWorkspaceId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    datasetWorkspaceId = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("title"u8))
                {
                    title = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("reportId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    reportId = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("datasetId"u8))
                {
                    datasetId = property.Value.GetString();
                    continue;
                }
            }
            return new WorkspaceInfoTile(id, title.Value, Optional.ToNullable(reportId), datasetId.Value, Optional.ToNullable(datasetWorkspaceId));
        }
    }
}
