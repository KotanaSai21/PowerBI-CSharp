// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Microsoft.PowerBI.Api.Models
{
    public partial class GoalsRulesGoalStatusRules
    {
        internal static GoalsRulesGoalStatusRules DeserializeGoalsRulesGoalStatusRules(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<IReadOnlyList<GoalsRulesRule1OfInt32>> rules = default;
            Optional<int> defaultOutput = default;
            Optional<string> scorecardObjectId = default;
            Optional<string> goalObjectId = default;
            Optional<DateTimeOffset> lastModifiedTime = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("rules"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<GoalsRulesRule1OfInt32> array = new List<GoalsRulesRule1OfInt32>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(GoalsRulesRule1OfInt32.DeserializeGoalsRulesRule1OfInt32(item));
                    }
                    rules = array;
                    continue;
                }
                if (property.NameEquals("defaultOutput"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    defaultOutput = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("scorecardObjectId"u8))
                {
                    scorecardObjectId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("goalObjectId"u8))
                {
                    goalObjectId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastModifiedTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    lastModifiedTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new GoalsRulesGoalStatusRules(Optional.ToList(rules), Optional.ToNullable(defaultOutput), scorecardObjectId.Value, goalObjectId.Value, Optional.ToNullable(lastModifiedTime));
        }
    }
}
