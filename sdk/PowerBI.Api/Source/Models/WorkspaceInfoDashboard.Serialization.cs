// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Microsoft.PowerBI.Api.Models
{
    public partial class WorkspaceInfoDashboard : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DataClassification))
            {
                writer.WritePropertyName("dataClassification"u8);
                writer.WriteStringValue(DataClassification);
            }
            if (Optional.IsDefined(SensitivityLabel))
            {
                writer.WritePropertyName("sensitivityLabel"u8);
                writer.WriteObjectValue(SensitivityLabel);
            }
            if (Optional.IsCollectionDefined(Tiles))
            {
                writer.WritePropertyName("tiles"u8);
                writer.WriteStartArray();
                foreach (var item in Tiles)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(Users))
            {
                writer.WritePropertyName("users"u8);
                writer.WriteStartArray();
                foreach (var item in Users)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WritePropertyName("id"u8);
            writer.WriteStringValue(Id);
            if (Optional.IsDefined(DisplayName))
            {
                writer.WritePropertyName("displayName"u8);
                writer.WriteStringValue(DisplayName);
            }
            if (Optional.IsDefined(IsReadOnly))
            {
                writer.WritePropertyName("isReadOnly"u8);
                writer.WriteBooleanValue(IsReadOnly.Value);
            }
            if (Optional.IsDefined(AppId))
            {
                writer.WritePropertyName("appId"u8);
                writer.WriteStringValue(AppId);
            }
            writer.WriteEndObject();
        }

        internal static WorkspaceInfoDashboard DeserializeWorkspaceInfoDashboard(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> dataClassification = default;
            Optional<SensitivityLabel> sensitivityLabel = default;
            Optional<IList<WorkspaceInfoTile>> tiles = default;
            Optional<IList<DashboardUser>> users = default;
            Guid id = default;
            Optional<string> displayName = default;
            Optional<bool> isReadOnly = default;
            Optional<string> appId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("dataClassification"u8))
                {
                    dataClassification = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sensitivityLabel"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    sensitivityLabel = SensitivityLabel.DeserializeSensitivityLabel(property.Value);
                    continue;
                }
                if (property.NameEquals("tiles"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<WorkspaceInfoTile> array = new List<WorkspaceInfoTile>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(WorkspaceInfoTile.DeserializeWorkspaceInfoTile(item));
                    }
                    tiles = array;
                    continue;
                }
                if (property.NameEquals("users"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<DashboardUser> array = new List<DashboardUser>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DashboardUser.DeserializeDashboardUser(item));
                    }
                    users = array;
                    continue;
                }
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("displayName"u8))
                {
                    displayName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("isReadOnly"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isReadOnly = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("appId"u8))
                {
                    appId = property.Value.GetString();
                    continue;
                }
            }
            return new WorkspaceInfoDashboard(id, displayName.Value, Optional.ToNullable(isReadOnly), appId.Value, dataClassification.Value, sensitivityLabel.Value, Optional.ToList(tiles), Optional.ToList(users));
        }
    }
}
