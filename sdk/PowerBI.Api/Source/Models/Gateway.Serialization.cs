// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Microsoft.PowerBI.Api.Models
{
    public partial class Gateway
    {
        internal static Gateway DeserializeGateway(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Guid id = default;
            Optional<string> name = default;
            Optional<string> type = default;
            Optional<string> gatewayAnnotation = default;
            Optional<GatewayPublicKey> publicKey = default;
            Optional<string> gatewayStatus = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("gatewayAnnotation"u8))
                {
                    gatewayAnnotation = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("publicKey"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    publicKey = GatewayPublicKey.DeserializeGatewayPublicKey(property.Value);
                    continue;
                }
                if (property.NameEquals("gatewayStatus"u8))
                {
                    gatewayStatus = property.Value.GetString();
                    continue;
                }
            }
            return new Gateway(id, name.Value, type.Value, gatewayAnnotation.Value, publicKey.Value, gatewayStatus.Value);
        }
    }
}
